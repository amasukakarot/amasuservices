version: '3.8'
services:
  customer-service:
    build:
      context: .
      dockerfile: /customer-service/Dockerfile
    container_name: customer-service
    ports:
      - "30000:30000"
    networks:
      - amasunet
    depends_on:
      - my-postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  fraud-service:
    build:
      context: .
      dockerfile: /fraud-service/Dockerfile
    container_name: fraud-service
    ports:
      - "30001:30001"
    networks:
      - amasunet
    depends_on:
      - my-postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  my-postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: amasu
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres_volume:/data/postgres #volume named-volume:location
    ports:
      - "5432:5432"
    networks:
      - amasunet
    restart: unless-stopped

  my-pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      #volume host name : path where pgadmin persists its data
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - amasunet
    restart: unless-stopped

networks:
  amasunet:
    driver: bridge

#list all volumes on service level
volumes:
  #name of volume
  postgres_volume:
  pgadmin:
